{"version":3,"file":null,"sources":["../src/parser.js","../src/roles.js","../src/index.js"],"sourcesContent":["\nexport class Parser {\n  whiteSpace = /\\s*/;\n  constructor (apply) {\n    this._apply = apply;\n  }\n  apply = (str, offset = 0) => this._apply(str, offset) || false;\n  then = (transform) => parser((str, offset) => {\n    let res = this.apply(str, offset);\n    return res && { res: transform(res.res), pos: res.pos };\n  });\n  ws = () => parser((str, offset) => {\n    let res = this.whiteSpace.exec(str.substr(offset));\n    return res && this.apply(str, offset + res[0].length);\n  });\n  opt = () => parser((str, offset) => (\n    this.apply(str, offset) || { res: undefined, pos: offset }\n  ));\n  not = (p) => parser((str, offset) => {\n    let res = this.apply(str, offset);\n    return res && !p.apply(str, offset) && res;\n  });\n  rep = () => parser((str, offset) => {\n    let result = [], res;\n    while (res = this.apply(str, offset)) {\n      result.push(res.res);\n      offset = res.pos;\n    }\n    return { res: result, pos: offset };\n  })\n}\n\nexport const parser = (apply) => new Parser(apply);\n\nexport default parser;","import { parser } from './parser'\n\nexport const txt = (str2) => parser((str, offset) => (\n  str.substr(offset, str2.length) == str2 && { res: str2, pos: offset + str2.length }\n));\n\nexport const reg = (regexp) => parser((str, offset) => {\n  let res = regexp.exec(str.substr(offset));\n  return res && res.index === 0 && { res: res[ 0 ], pos: offset + res[ 0 ].length };\n});\n\nexport const opt = (pars) => parser((str, offset) => (\n  pars.apply(str, offset) || { res: undefined, pos: offset }\n));\n\nexport const rep = (pars) => parser((str, offset) => {\n  let result = [], res;\n  while (res = pars.apply(str, offset)) {\n    result.push(res.res);\n    offset = res.pos;\n  }\n  return { res: result, pos: offset };\n});\n\nexport const or = (...args) => parser((str, offset) => {\n  for (let value of args) {\n    let res = value.apply(str, offset);\n    if (res) return res;\n  }\n});\n\nexport const and = (...args) => parser((str, offset) => {\n  let result = [];\n\n  for (let value of args) {\n    let res = value.apply(str, offset);\n    if (!res) return;\n    offset = res.pos;\n    result.push(res.res);\n  }\n\n  return { res: result, pos: offset };\n});\n\n","import { txt, reg, and, or, rep } from './roles';\nimport { parser } from './parser';\n\nexport default {\n  parser,\n\n  txt,\n  reg,\n  and,\n  or,\n  rep\n};"],"names":["Parser","apply","whiteSpace","str","offset","_apply","then","transform","parser","res","pos","ws","exec","substr","length","opt","undefined","not","p","rep","result","push","txt","str2","reg","regexp","index","pars","or","args","value","and"],"mappings":"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"}