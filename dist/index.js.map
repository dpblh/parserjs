{"version":3,"file":null,"sources":["../src/parser.js","../src/roles.js","../src/index.js"],"sourcesContent":["\nconst flatten = list => list.reduce(\n  (a, b) => a.concat(Array.isArray(b) ? flatten(b) : b), []\n);\n\nexport class Parser {\n  whiteSpace = /\\s*/;\n  constructor (apply) {\n    this._apply = apply;\n  }\n  apply = (str, offset = 0) => this._apply(str, offset) || false;\n  then = (transform) => parser((str, offset) => {\n    let res = this.apply(str, offset);\n    return res && { res: transform(res.res), pos: res.pos };\n  });\n  and = (p) => parser((str, offset) => {\n    let resl = this.apply(str, offset), resr;\n    return resl && (resr = p.apply(str, resl.pos)) && { res: flatten([resl.res, resr.res]), pos: resr.pos };\n  });\n  andl = (p) => parser((str, offset) => {\n    let resl = this.apply(str, offset), resr;\n    return resl && (resr = p.apply(str, resl.pos)) && { res: resl.res, pos: resr.pos };\n  });\n  andr = (p) => parser((str, offset) => {\n    let resl = this.apply(str, offset), resr;\n    return resl && (resr = p.apply(str, resl.pos)) && { res: resr.res, pos: resr.pos };\n  });\n  ws = () => parser((str, offset) => {\n    let res = this.whiteSpace.exec(str.substr(offset));\n    return res && this.apply(str, offset + res[0].length);\n  });\n  opt = () => parser((str, offset) => (\n    this.apply(str, offset) || { res: undefined, pos: offset }\n  ));\n  not = (p) => parser((str, offset) => {\n    let res = this.apply(str, offset);\n    return res && !p.apply(str, offset) && res;\n  });\n  rep = () => parser((str, offset) => {\n    let result = [], res;\n    while (res = this.apply(str, offset)) {\n      result.push(res.res);\n      offset = res.pos;\n    }\n    return { res: result, pos: offset };\n  })\n}\n\nexport const parser = (apply) => new Parser(apply);\n\nexport default parser;","import { parser } from './parser'\n\nexport const txt = (str2) => parser((str, offset) => (\n  str.substr(offset, str2.length) == str2 && { res: str2, pos: offset + str2.length }\n));\n\nexport const reg = (regexp) => parser((str, offset) => {\n  let res = regexp.exec(str.substr(offset));\n  return res && res.index === 0 && { res: res[ 0 ], pos: offset + res[ 0 ].length };\n});\n\nexport const opt = (pars) => parser((str, offset) => (\n  pars.apply(str, offset) || { res: undefined, pos: offset }\n));\n\nexport const rep = (pars) => parser((str, offset) => {\n  let result = [], res;\n  while (res = pars.apply(str, offset)) {\n    result.push(res.res);\n    offset = res.pos;\n  }\n  return { res: result, pos: offset };\n});\n\nexport const or = (...args) => parser((str, offset) => {\n  for (let value of args) {\n    let res = value.apply(str, offset);\n    if (res) return res;\n  }\n});\n\nexport const and = (...args) => parser((str, offset) => {\n  let result = [];\n\n  for (let value of args) {\n    let res = value.apply(str, offset);\n    if (!res) return;\n    offset = res.pos;\n    result.push(res.res);\n  }\n\n  return { res: result, pos: offset };\n});\n\n","import { txt, reg, and, or, rep } from './roles';\nimport { parser } from './parser';\n\nexport default {\n  parser,\n\n  txt,\n  reg,\n  and,\n  or,\n  rep\n};"],"names":["flatten","list","reduce","a","b","concat","Array","isArray","Parser","apply","whiteSpace","str","offset","_apply","then","transform","parser","res","pos","and","p","resl","resr","andl","andr","ws","exec","substr","length","opt","undefined","not","rep","result","push","txt","str2","reg","regexp","index","pars","or","args","value"],"mappings":"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"}